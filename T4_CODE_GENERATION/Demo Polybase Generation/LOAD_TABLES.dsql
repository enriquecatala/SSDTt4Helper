/* Generated by InMemoryDatabaseModelInclude.tt downloaded from https://github.com/enriquecatala/SSDTt4Helper */
/* Copyright (c) 2020 Enrique Catalá Bañuls */




-- Version 1.0 
-- 
-- Enrique Catala Bañuls: Fichero Autogenerado para creacion de CREATE EXTERNAL TABLES 
--                        Debe ejectuarse sobre SQL Data Warehouse
--                        Se asumen los ficheros ya subidos en storage y la BBDD creada 
--
-- Creacion de EXTERNAL TABLES PARA USAR CON POLYBASE LA CARGA DE DATOS 
--  
 

-----------------------------------------------------------------------------------------------------
--INICIO: dbo.AWBuildVersion
-----------------------------------------------------------------------------------------------------
IF (object_id('[dbo].[AWBuildVersion]') IS NOT NULL)
			DROP  TABLE [dbo].[AWBuildVersion];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [dbo].[AWBuildVersion]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [SystemInformationID] ,[Database Version] ,cast(convert(datetime2,[VersionDate] ,121) as datetime) as [VersionDate] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [dbo].[AWBuildVersion_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_AWBuildVersion_SystemInformationID] on [dbo].[AWBuildVersion] ([SystemInformationID]);
	    
		CREATE STATISTICS [stats_AWBuildVersion_Database Version] on [dbo].[AWBuildVersion] ([Database Version]);
	    
		CREATE STATISTICS [stats_AWBuildVersion_VersionDate] on [dbo].[AWBuildVersion] ([VersionDate]);
	    
		CREATE STATISTICS [stats_AWBuildVersion_ModifiedDate] on [dbo].[AWBuildVersion] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: dbo.DatabaseLog
-----------------------------------------------------------------------------------------------------
IF (object_id('[dbo].[DatabaseLog]') IS NOT NULL)
			DROP  TABLE [dbo].[DatabaseLog];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [dbo].[DatabaseLog]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [DatabaseLogID] ,cast(convert(datetime2,[PostTime] ,121) as datetime) as [PostTime] ,[DatabaseUser] ,[Event] ,[Schema] ,[Object] ,[TSQL] ,[XmlEvent] 
		FROM [dbo].[DatabaseLog_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_DatabaseLog_DatabaseLogID] on [dbo].[DatabaseLog] ([DatabaseLogID]);
	    
		CREATE STATISTICS [stats_DatabaseLog_PostTime] on [dbo].[DatabaseLog] ([PostTime]);
	    
		CREATE STATISTICS [stats_DatabaseLog_DatabaseUser] on [dbo].[DatabaseLog] ([DatabaseUser]);
	    
		CREATE STATISTICS [stats_DatabaseLog_Event] on [dbo].[DatabaseLog] ([Event]);
	    
		CREATE STATISTICS [stats_DatabaseLog_Schema] on [dbo].[DatabaseLog] ([Schema]);
	    
		CREATE STATISTICS [stats_DatabaseLog_Object] on [dbo].[DatabaseLog] ([Object]);
	    
		CREATE STATISTICS [stats_DatabaseLog_TSQL] on [dbo].[DatabaseLog] ([TSQL]);
	    
		CREATE STATISTICS [stats_DatabaseLog_XmlEvent] on [dbo].[DatabaseLog] ([XmlEvent]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: dbo.ErrorLog
-----------------------------------------------------------------------------------------------------
IF (object_id('[dbo].[ErrorLog]') IS NOT NULL)
			DROP  TABLE [dbo].[ErrorLog];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [dbo].[ErrorLog]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [ErrorLogID] ,cast(convert(datetime2,[ErrorTime] ,121) as datetime) as [ErrorTime] ,[UserName] ,[ErrorNumber] ,[ErrorSeverity] ,[ErrorState] ,[ErrorProcedure] ,[ErrorLine] ,[ErrorMessage] 
		FROM [dbo].[ErrorLog_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_ErrorLog_ErrorLogID] on [dbo].[ErrorLog] ([ErrorLogID]);
	    
		CREATE STATISTICS [stats_ErrorLog_ErrorTime] on [dbo].[ErrorLog] ([ErrorTime]);
	    
		CREATE STATISTICS [stats_ErrorLog_UserName] on [dbo].[ErrorLog] ([UserName]);
	    
		CREATE STATISTICS [stats_ErrorLog_ErrorNumber] on [dbo].[ErrorLog] ([ErrorNumber]);
	    
		CREATE STATISTICS [stats_ErrorLog_ErrorSeverity] on [dbo].[ErrorLog] ([ErrorSeverity]);
	    
		CREATE STATISTICS [stats_ErrorLog_ErrorState] on [dbo].[ErrorLog] ([ErrorState]);
	    
		CREATE STATISTICS [stats_ErrorLog_ErrorProcedure] on [dbo].[ErrorLog] ([ErrorProcedure]);
	    
		CREATE STATISTICS [stats_ErrorLog_ErrorLine] on [dbo].[ErrorLog] ([ErrorLine]);
	    
		CREATE STATISTICS [stats_ErrorLog_ErrorMessage] on [dbo].[ErrorLog] ([ErrorMessage]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: HumanResources.Department
-----------------------------------------------------------------------------------------------------
IF (object_id('[HumanResources].[Department]') IS NOT NULL)
			DROP  TABLE [HumanResources].[Department];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [HumanResources].[Department]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [DepartmentID] ,[Name] ,[GroupName] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [HumanResources].[Department_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_Department_DepartmentID] on [HumanResources].[Department] ([DepartmentID]);
	    
		CREATE STATISTICS [stats_Department_Name] on [HumanResources].[Department] ([Name]);
	    
		CREATE STATISTICS [stats_Department_GroupName] on [HumanResources].[Department] ([GroupName]);
	    
		CREATE STATISTICS [stats_Department_ModifiedDate] on [HumanResources].[Department] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: HumanResources.Employee
-----------------------------------------------------------------------------------------------------
IF (object_id('[HumanResources].[Employee]') IS NOT NULL)
			DROP  TABLE [HumanResources].[Employee];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [HumanResources].[Employee]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [BusinessEntityID] ,[NationalIDNumber] ,[LoginID] ,[OrganizationNode]  is a UserDefinedType and must be FIXED MANUALLY!! ,,[JobTitle] ,[BirthDate] ,[MaritalStatus] ,[Gender] ,[HireDate] ,[SalariedFlag] ,[VacationHours] ,[SickLeaveHours] ,[CurrentFlag] ,[rowguid] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [HumanResources].[Employee_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_Employee_BusinessEntityID] on [HumanResources].[Employee] ([BusinessEntityID]);
	    
		CREATE STATISTICS [stats_Employee_NationalIDNumber] on [HumanResources].[Employee] ([NationalIDNumber]);
	    
		CREATE STATISTICS [stats_Employee_LoginID] on [HumanResources].[Employee] ([LoginID]);
	    
		CREATE STATISTICS [stats_Employee_OrganizationNode] on [HumanResources].[Employee] ([OrganizationNode]);
	    
		CREATE STATISTICS [stats_Employee_OrganizationLevel] on [HumanResources].[Employee] ([OrganizationLevel]);
	    
		CREATE STATISTICS [stats_Employee_JobTitle] on [HumanResources].[Employee] ([JobTitle]);
	    
		CREATE STATISTICS [stats_Employee_BirthDate] on [HumanResources].[Employee] ([BirthDate]);
	    
		CREATE STATISTICS [stats_Employee_MaritalStatus] on [HumanResources].[Employee] ([MaritalStatus]);
	    
		CREATE STATISTICS [stats_Employee_Gender] on [HumanResources].[Employee] ([Gender]);
	    
		CREATE STATISTICS [stats_Employee_HireDate] on [HumanResources].[Employee] ([HireDate]);
	    
		CREATE STATISTICS [stats_Employee_SalariedFlag] on [HumanResources].[Employee] ([SalariedFlag]);
	    
		CREATE STATISTICS [stats_Employee_VacationHours] on [HumanResources].[Employee] ([VacationHours]);
	    
		CREATE STATISTICS [stats_Employee_SickLeaveHours] on [HumanResources].[Employee] ([SickLeaveHours]);
	    
		CREATE STATISTICS [stats_Employee_CurrentFlag] on [HumanResources].[Employee] ([CurrentFlag]);
	    
		CREATE STATISTICS [stats_Employee_rowguid] on [HumanResources].[Employee] ([rowguid]);
	    
		CREATE STATISTICS [stats_Employee_ModifiedDate] on [HumanResources].[Employee] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: HumanResources.EmployeeDepartmentHistory
-----------------------------------------------------------------------------------------------------
IF (object_id('[HumanResources].[EmployeeDepartmentHistory]') IS NOT NULL)
			DROP  TABLE [HumanResources].[EmployeeDepartmentHistory];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [HumanResources].[EmployeeDepartmentHistory]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [BusinessEntityID] ,[DepartmentID] ,[ShiftID] ,[StartDate] ,[EndDate] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [HumanResources].[EmployeeDepartmentHistory_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_EmployeeDepartmentHistory_BusinessEntityID] on [HumanResources].[EmployeeDepartmentHistory] ([BusinessEntityID]);
	    
		CREATE STATISTICS [stats_EmployeeDepartmentHistory_DepartmentID] on [HumanResources].[EmployeeDepartmentHistory] ([DepartmentID]);
	    
		CREATE STATISTICS [stats_EmployeeDepartmentHistory_ShiftID] on [HumanResources].[EmployeeDepartmentHistory] ([ShiftID]);
	    
		CREATE STATISTICS [stats_EmployeeDepartmentHistory_StartDate] on [HumanResources].[EmployeeDepartmentHistory] ([StartDate]);
	    
		CREATE STATISTICS [stats_EmployeeDepartmentHistory_EndDate] on [HumanResources].[EmployeeDepartmentHistory] ([EndDate]);
	    
		CREATE STATISTICS [stats_EmployeeDepartmentHistory_ModifiedDate] on [HumanResources].[EmployeeDepartmentHistory] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: HumanResources.EmployeePayHistory
-----------------------------------------------------------------------------------------------------
IF (object_id('[HumanResources].[EmployeePayHistory]') IS NOT NULL)
			DROP  TABLE [HumanResources].[EmployeePayHistory];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [HumanResources].[EmployeePayHistory]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [BusinessEntityID] ,cast(convert(datetime2,[RateChangeDate] ,121) as datetime) as [RateChangeDate] ,[Rate] ,[PayFrequency] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [HumanResources].[EmployeePayHistory_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_EmployeePayHistory_BusinessEntityID] on [HumanResources].[EmployeePayHistory] ([BusinessEntityID]);
	    
		CREATE STATISTICS [stats_EmployeePayHistory_RateChangeDate] on [HumanResources].[EmployeePayHistory] ([RateChangeDate]);
	    
		CREATE STATISTICS [stats_EmployeePayHistory_Rate] on [HumanResources].[EmployeePayHistory] ([Rate]);
	    
		CREATE STATISTICS [stats_EmployeePayHistory_PayFrequency] on [HumanResources].[EmployeePayHistory] ([PayFrequency]);
	    
		CREATE STATISTICS [stats_EmployeePayHistory_ModifiedDate] on [HumanResources].[EmployeePayHistory] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: HumanResources.JobCandidate
-----------------------------------------------------------------------------------------------------
IF (object_id('[HumanResources].[JobCandidate]') IS NOT NULL)
			DROP  TABLE [HumanResources].[JobCandidate];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [HumanResources].[JobCandidate]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [JobCandidateID] ,[BusinessEntityID] ,[Resume] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [HumanResources].[JobCandidate_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_JobCandidate_JobCandidateID] on [HumanResources].[JobCandidate] ([JobCandidateID]);
	    
		CREATE STATISTICS [stats_JobCandidate_BusinessEntityID] on [HumanResources].[JobCandidate] ([BusinessEntityID]);
	    
		CREATE STATISTICS [stats_JobCandidate_Resume] on [HumanResources].[JobCandidate] ([Resume]);
	    
		CREATE STATISTICS [stats_JobCandidate_ModifiedDate] on [HumanResources].[JobCandidate] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: HumanResources.Shift
-----------------------------------------------------------------------------------------------------
IF (object_id('[HumanResources].[Shift]') IS NOT NULL)
			DROP  TABLE [HumanResources].[Shift];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [HumanResources].[Shift]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [ShiftID] ,[Name] ,[StartTime] ,[EndTime] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [HumanResources].[Shift_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_Shift_ShiftID] on [HumanResources].[Shift] ([ShiftID]);
	    
		CREATE STATISTICS [stats_Shift_Name] on [HumanResources].[Shift] ([Name]);
	    
		CREATE STATISTICS [stats_Shift_StartTime] on [HumanResources].[Shift] ([StartTime]);
	    
		CREATE STATISTICS [stats_Shift_EndTime] on [HumanResources].[Shift] ([EndTime]);
	    
		CREATE STATISTICS [stats_Shift_ModifiedDate] on [HumanResources].[Shift] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Person.Address
-----------------------------------------------------------------------------------------------------
IF (object_id('[Person].[Address]') IS NOT NULL)
			DROP  TABLE [Person].[Address];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Person].[Address]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [AddressID] ,[AddressLine1] ,[AddressLine2] ,[City] ,[StateProvinceID] ,[PostalCode] ,[SpatialLocation]  is a UserDefinedType and must be FIXED MANUALLY!! ,[rowguid] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Person].[Address_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_Address_AddressID] on [Person].[Address] ([AddressID]);
	    
		CREATE STATISTICS [stats_Address_AddressLine1] on [Person].[Address] ([AddressLine1]);
	    
		CREATE STATISTICS [stats_Address_AddressLine2] on [Person].[Address] ([AddressLine2]);
	    
		CREATE STATISTICS [stats_Address_City] on [Person].[Address] ([City]);
	    
		CREATE STATISTICS [stats_Address_StateProvinceID] on [Person].[Address] ([StateProvinceID]);
	    
		CREATE STATISTICS [stats_Address_PostalCode] on [Person].[Address] ([PostalCode]);
	    
		CREATE STATISTICS [stats_Address_SpatialLocation] on [Person].[Address] ([SpatialLocation]);
	    
		CREATE STATISTICS [stats_Address_rowguid] on [Person].[Address] ([rowguid]);
	    
		CREATE STATISTICS [stats_Address_ModifiedDate] on [Person].[Address] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Person.AddressType
-----------------------------------------------------------------------------------------------------
IF (object_id('[Person].[AddressType]') IS NOT NULL)
			DROP  TABLE [Person].[AddressType];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Person].[AddressType]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [AddressTypeID] ,[Name] ,[rowguid] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Person].[AddressType_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_AddressType_AddressTypeID] on [Person].[AddressType] ([AddressTypeID]);
	    
		CREATE STATISTICS [stats_AddressType_Name] on [Person].[AddressType] ([Name]);
	    
		CREATE STATISTICS [stats_AddressType_rowguid] on [Person].[AddressType] ([rowguid]);
	    
		CREATE STATISTICS [stats_AddressType_ModifiedDate] on [Person].[AddressType] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Person.BusinessEntity
-----------------------------------------------------------------------------------------------------
IF (object_id('[Person].[BusinessEntity]') IS NOT NULL)
			DROP  TABLE [Person].[BusinessEntity];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Person].[BusinessEntity]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [BusinessEntityID] ,[rowguid] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Person].[BusinessEntity_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_BusinessEntity_BusinessEntityID] on [Person].[BusinessEntity] ([BusinessEntityID]);
	    
		CREATE STATISTICS [stats_BusinessEntity_rowguid] on [Person].[BusinessEntity] ([rowguid]);
	    
		CREATE STATISTICS [stats_BusinessEntity_ModifiedDate] on [Person].[BusinessEntity] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Person.BusinessEntityAddress
-----------------------------------------------------------------------------------------------------
IF (object_id('[Person].[BusinessEntityAddress]') IS NOT NULL)
			DROP  TABLE [Person].[BusinessEntityAddress];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Person].[BusinessEntityAddress]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [BusinessEntityID] ,[AddressID] ,[AddressTypeID] ,[rowguid] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Person].[BusinessEntityAddress_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_BusinessEntityAddress_BusinessEntityID] on [Person].[BusinessEntityAddress] ([BusinessEntityID]);
	    
		CREATE STATISTICS [stats_BusinessEntityAddress_AddressID] on [Person].[BusinessEntityAddress] ([AddressID]);
	    
		CREATE STATISTICS [stats_BusinessEntityAddress_AddressTypeID] on [Person].[BusinessEntityAddress] ([AddressTypeID]);
	    
		CREATE STATISTICS [stats_BusinessEntityAddress_rowguid] on [Person].[BusinessEntityAddress] ([rowguid]);
	    
		CREATE STATISTICS [stats_BusinessEntityAddress_ModifiedDate] on [Person].[BusinessEntityAddress] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Person.BusinessEntityContact
-----------------------------------------------------------------------------------------------------
IF (object_id('[Person].[BusinessEntityContact]') IS NOT NULL)
			DROP  TABLE [Person].[BusinessEntityContact];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Person].[BusinessEntityContact]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [BusinessEntityID] ,[PersonID] ,[ContactTypeID] ,[rowguid] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Person].[BusinessEntityContact_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_BusinessEntityContact_BusinessEntityID] on [Person].[BusinessEntityContact] ([BusinessEntityID]);
	    
		CREATE STATISTICS [stats_BusinessEntityContact_PersonID] on [Person].[BusinessEntityContact] ([PersonID]);
	    
		CREATE STATISTICS [stats_BusinessEntityContact_ContactTypeID] on [Person].[BusinessEntityContact] ([ContactTypeID]);
	    
		CREATE STATISTICS [stats_BusinessEntityContact_rowguid] on [Person].[BusinessEntityContact] ([rowguid]);
	    
		CREATE STATISTICS [stats_BusinessEntityContact_ModifiedDate] on [Person].[BusinessEntityContact] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Person.ContactType
-----------------------------------------------------------------------------------------------------
IF (object_id('[Person].[ContactType]') IS NOT NULL)
			DROP  TABLE [Person].[ContactType];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Person].[ContactType]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [ContactTypeID] ,[Name] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Person].[ContactType_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_ContactType_ContactTypeID] on [Person].[ContactType] ([ContactTypeID]);
	    
		CREATE STATISTICS [stats_ContactType_Name] on [Person].[ContactType] ([Name]);
	    
		CREATE STATISTICS [stats_ContactType_ModifiedDate] on [Person].[ContactType] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Person.CountryRegion
-----------------------------------------------------------------------------------------------------
IF (object_id('[Person].[CountryRegion]') IS NOT NULL)
			DROP  TABLE [Person].[CountryRegion];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Person].[CountryRegion]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [CountryRegionCode] ,[Name] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Person].[CountryRegion_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_CountryRegion_CountryRegionCode] on [Person].[CountryRegion] ([CountryRegionCode]);
	    
		CREATE STATISTICS [stats_CountryRegion_Name] on [Person].[CountryRegion] ([Name]);
	    
		CREATE STATISTICS [stats_CountryRegion_ModifiedDate] on [Person].[CountryRegion] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Person.EmailAddress
-----------------------------------------------------------------------------------------------------
IF (object_id('[Person].[EmailAddress]') IS NOT NULL)
			DROP  TABLE [Person].[EmailAddress];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Person].[EmailAddress]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [BusinessEntityID] ,[EmailAddressID] ,[EmailAddress] ,[rowguid] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Person].[EmailAddress_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_EmailAddress_BusinessEntityID] on [Person].[EmailAddress] ([BusinessEntityID]);
	    
		CREATE STATISTICS [stats_EmailAddress_EmailAddressID] on [Person].[EmailAddress] ([EmailAddressID]);
	    
		CREATE STATISTICS [stats_EmailAddress_EmailAddress] on [Person].[EmailAddress] ([EmailAddress]);
	    
		CREATE STATISTICS [stats_EmailAddress_rowguid] on [Person].[EmailAddress] ([rowguid]);
	    
		CREATE STATISTICS [stats_EmailAddress_ModifiedDate] on [Person].[EmailAddress] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Person.Password
-----------------------------------------------------------------------------------------------------
IF (object_id('[Person].[Password]') IS NOT NULL)
			DROP  TABLE [Person].[Password];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Person].[Password]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [BusinessEntityID] ,[PasswordHash] ,[PasswordSalt] ,[rowguid] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Person].[Password_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_Password_BusinessEntityID] on [Person].[Password] ([BusinessEntityID]);
	    
		CREATE STATISTICS [stats_Password_PasswordHash] on [Person].[Password] ([PasswordHash]);
	    
		CREATE STATISTICS [stats_Password_PasswordSalt] on [Person].[Password] ([PasswordSalt]);
	    
		CREATE STATISTICS [stats_Password_rowguid] on [Person].[Password] ([rowguid]);
	    
		CREATE STATISTICS [stats_Password_ModifiedDate] on [Person].[Password] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Person.Person
-----------------------------------------------------------------------------------------------------
IF (object_id('[Person].[Person]') IS NOT NULL)
			DROP  TABLE [Person].[Person];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Person].[Person]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [BusinessEntityID] ,[PersonType] ,[NameStyle] ,[Title] ,[FirstName] ,[MiddleName] ,[LastName] ,[Suffix] ,[EmailPromotion] ,[AdditionalContactInfo] ,[Demographics] ,[rowguid] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Person].[Person_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_Person_BusinessEntityID] on [Person].[Person] ([BusinessEntityID]);
	    
		CREATE STATISTICS [stats_Person_PersonType] on [Person].[Person] ([PersonType]);
	    
		CREATE STATISTICS [stats_Person_NameStyle] on [Person].[Person] ([NameStyle]);
	    
		CREATE STATISTICS [stats_Person_Title] on [Person].[Person] ([Title]);
	    
		CREATE STATISTICS [stats_Person_FirstName] on [Person].[Person] ([FirstName]);
	    
		CREATE STATISTICS [stats_Person_MiddleName] on [Person].[Person] ([MiddleName]);
	    
		CREATE STATISTICS [stats_Person_LastName] on [Person].[Person] ([LastName]);
	    
		CREATE STATISTICS [stats_Person_Suffix] on [Person].[Person] ([Suffix]);
	    
		CREATE STATISTICS [stats_Person_EmailPromotion] on [Person].[Person] ([EmailPromotion]);
	    
		CREATE STATISTICS [stats_Person_AdditionalContactInfo] on [Person].[Person] ([AdditionalContactInfo]);
	    
		CREATE STATISTICS [stats_Person_Demographics] on [Person].[Person] ([Demographics]);
	    
		CREATE STATISTICS [stats_Person_rowguid] on [Person].[Person] ([rowguid]);
	    
		CREATE STATISTICS [stats_Person_ModifiedDate] on [Person].[Person] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Person.PersonPhone
-----------------------------------------------------------------------------------------------------
IF (object_id('[Person].[PersonPhone]') IS NOT NULL)
			DROP  TABLE [Person].[PersonPhone];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Person].[PersonPhone]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [BusinessEntityID] ,[PhoneNumber] ,[PhoneNumberTypeID] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Person].[PersonPhone_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_PersonPhone_BusinessEntityID] on [Person].[PersonPhone] ([BusinessEntityID]);
	    
		CREATE STATISTICS [stats_PersonPhone_PhoneNumber] on [Person].[PersonPhone] ([PhoneNumber]);
	    
		CREATE STATISTICS [stats_PersonPhone_PhoneNumberTypeID] on [Person].[PersonPhone] ([PhoneNumberTypeID]);
	    
		CREATE STATISTICS [stats_PersonPhone_ModifiedDate] on [Person].[PersonPhone] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Person.PhoneNumberType
-----------------------------------------------------------------------------------------------------
IF (object_id('[Person].[PhoneNumberType]') IS NOT NULL)
			DROP  TABLE [Person].[PhoneNumberType];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Person].[PhoneNumberType]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [PhoneNumberTypeID] ,[Name] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Person].[PhoneNumberType_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_PhoneNumberType_PhoneNumberTypeID] on [Person].[PhoneNumberType] ([PhoneNumberTypeID]);
	    
		CREATE STATISTICS [stats_PhoneNumberType_Name] on [Person].[PhoneNumberType] ([Name]);
	    
		CREATE STATISTICS [stats_PhoneNumberType_ModifiedDate] on [Person].[PhoneNumberType] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Person.StateProvince
-----------------------------------------------------------------------------------------------------
IF (object_id('[Person].[StateProvince]') IS NOT NULL)
			DROP  TABLE [Person].[StateProvince];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Person].[StateProvince]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [StateProvinceID] ,[StateProvinceCode] ,[CountryRegionCode] ,[IsOnlyStateProvinceFlag] ,[Name] ,[TerritoryID] ,[rowguid] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Person].[StateProvince_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_StateProvince_StateProvinceID] on [Person].[StateProvince] ([StateProvinceID]);
	    
		CREATE STATISTICS [stats_StateProvince_StateProvinceCode] on [Person].[StateProvince] ([StateProvinceCode]);
	    
		CREATE STATISTICS [stats_StateProvince_CountryRegionCode] on [Person].[StateProvince] ([CountryRegionCode]);
	    
		CREATE STATISTICS [stats_StateProvince_IsOnlyStateProvinceFlag] on [Person].[StateProvince] ([IsOnlyStateProvinceFlag]);
	    
		CREATE STATISTICS [stats_StateProvince_Name] on [Person].[StateProvince] ([Name]);
	    
		CREATE STATISTICS [stats_StateProvince_TerritoryID] on [Person].[StateProvince] ([TerritoryID]);
	    
		CREATE STATISTICS [stats_StateProvince_rowguid] on [Person].[StateProvince] ([rowguid]);
	    
		CREATE STATISTICS [stats_StateProvince_ModifiedDate] on [Person].[StateProvince] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Production.BillOfMaterials
-----------------------------------------------------------------------------------------------------
IF (object_id('[Production].[BillOfMaterials]') IS NOT NULL)
			DROP  TABLE [Production].[BillOfMaterials];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Production].[BillOfMaterials]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [BillOfMaterialsID] ,[ProductAssemblyID] ,[ComponentID] ,cast(convert(datetime2,[StartDate] ,121) as datetime) as [StartDate] ,cast(convert(datetime2,[EndDate] ,121) as datetime) as [EndDate] ,[UnitMeasureCode] ,[BOMLevel] ,[PerAssemblyQty] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Production].[BillOfMaterials_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_BillOfMaterials_BillOfMaterialsID] on [Production].[BillOfMaterials] ([BillOfMaterialsID]);
	    
		CREATE STATISTICS [stats_BillOfMaterials_ProductAssemblyID] on [Production].[BillOfMaterials] ([ProductAssemblyID]);
	    
		CREATE STATISTICS [stats_BillOfMaterials_ComponentID] on [Production].[BillOfMaterials] ([ComponentID]);
	    
		CREATE STATISTICS [stats_BillOfMaterials_StartDate] on [Production].[BillOfMaterials] ([StartDate]);
	    
		CREATE STATISTICS [stats_BillOfMaterials_EndDate] on [Production].[BillOfMaterials] ([EndDate]);
	    
		CREATE STATISTICS [stats_BillOfMaterials_UnitMeasureCode] on [Production].[BillOfMaterials] ([UnitMeasureCode]);
	    
		CREATE STATISTICS [stats_BillOfMaterials_BOMLevel] on [Production].[BillOfMaterials] ([BOMLevel]);
	    
		CREATE STATISTICS [stats_BillOfMaterials_PerAssemblyQty] on [Production].[BillOfMaterials] ([PerAssemblyQty]);
	    
		CREATE STATISTICS [stats_BillOfMaterials_ModifiedDate] on [Production].[BillOfMaterials] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Production.Culture
-----------------------------------------------------------------------------------------------------
IF (object_id('[Production].[Culture]') IS NOT NULL)
			DROP  TABLE [Production].[Culture];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Production].[Culture]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [CultureID] ,[Name] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Production].[Culture_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_Culture_CultureID] on [Production].[Culture] ([CultureID]);
	    
		CREATE STATISTICS [stats_Culture_Name] on [Production].[Culture] ([Name]);
	    
		CREATE STATISTICS [stats_Culture_ModifiedDate] on [Production].[Culture] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Production.Document
-----------------------------------------------------------------------------------------------------
IF (object_id('[Production].[Document]') IS NOT NULL)
			DROP  TABLE [Production].[Document];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Production].[Document]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [DocumentNode]  is a UserDefinedType and must be FIXED MANUALLY!! ,,[Title] ,[Owner] ,[FolderFlag] ,[FileName] ,[FileExtension] ,[Revision] ,[ChangeNumber] ,[Status] ,[DocumentSummary] ,[Document] ,[rowguid] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Production].[Document_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_Document_DocumentNode] on [Production].[Document] ([DocumentNode]);
	    
		CREATE STATISTICS [stats_Document_DocumentLevel] on [Production].[Document] ([DocumentLevel]);
	    
		CREATE STATISTICS [stats_Document_Title] on [Production].[Document] ([Title]);
	    
		CREATE STATISTICS [stats_Document_Owner] on [Production].[Document] ([Owner]);
	    
		CREATE STATISTICS [stats_Document_FolderFlag] on [Production].[Document] ([FolderFlag]);
	    
		CREATE STATISTICS [stats_Document_FileName] on [Production].[Document] ([FileName]);
	    
		CREATE STATISTICS [stats_Document_FileExtension] on [Production].[Document] ([FileExtension]);
	    
		CREATE STATISTICS [stats_Document_Revision] on [Production].[Document] ([Revision]);
	    
		CREATE STATISTICS [stats_Document_ChangeNumber] on [Production].[Document] ([ChangeNumber]);
	    
		CREATE STATISTICS [stats_Document_Status] on [Production].[Document] ([Status]);
	    
		CREATE STATISTICS [stats_Document_DocumentSummary] on [Production].[Document] ([DocumentSummary]);
	    
		CREATE STATISTICS [stats_Document_Document] on [Production].[Document] ([Document]);
	    
		CREATE STATISTICS [stats_Document_rowguid] on [Production].[Document] ([rowguid]);
	    
		CREATE STATISTICS [stats_Document_ModifiedDate] on [Production].[Document] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Production.Illustration
-----------------------------------------------------------------------------------------------------
IF (object_id('[Production].[Illustration]') IS NOT NULL)
			DROP  TABLE [Production].[Illustration];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Production].[Illustration]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [IllustrationID] ,[Diagram] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Production].[Illustration_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_Illustration_IllustrationID] on [Production].[Illustration] ([IllustrationID]);
	    
		CREATE STATISTICS [stats_Illustration_Diagram] on [Production].[Illustration] ([Diagram]);
	    
		CREATE STATISTICS [stats_Illustration_ModifiedDate] on [Production].[Illustration] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Production.Location
-----------------------------------------------------------------------------------------------------
IF (object_id('[Production].[Location]') IS NOT NULL)
			DROP  TABLE [Production].[Location];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Production].[Location]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [LocationID] ,[Name] ,[CostRate] ,[Availability] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Production].[Location_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_Location_LocationID] on [Production].[Location] ([LocationID]);
	    
		CREATE STATISTICS [stats_Location_Name] on [Production].[Location] ([Name]);
	    
		CREATE STATISTICS [stats_Location_CostRate] on [Production].[Location] ([CostRate]);
	    
		CREATE STATISTICS [stats_Location_Availability] on [Production].[Location] ([Availability]);
	    
		CREATE STATISTICS [stats_Location_ModifiedDate] on [Production].[Location] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Production.Product
-----------------------------------------------------------------------------------------------------
IF (object_id('[Production].[Product]') IS NOT NULL)
			DROP  TABLE [Production].[Product];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Production].[Product]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [ProductID] ,[Name] ,[ProductNumber] ,[MakeFlag] ,[FinishedGoodsFlag] ,[Color] ,[SafetyStockLevel] ,[ReorderPoint] ,[StandardCost] ,[ListPrice] ,[Size] ,[SizeUnitMeasureCode] ,[WeightUnitMeasureCode] ,[Weight] ,[DaysToManufacture] ,[ProductLine] ,[Class] ,[Style] ,[ProductSubcategoryID] ,[ProductModelID] ,cast(convert(datetime2,[SellStartDate] ,121) as datetime) as [SellStartDate] ,cast(convert(datetime2,[SellEndDate] ,121) as datetime) as [SellEndDate] ,cast(convert(datetime2,[DiscontinuedDate] ,121) as datetime) as [DiscontinuedDate] ,[rowguid] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Production].[Product_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_Product_ProductID] on [Production].[Product] ([ProductID]);
	    
		CREATE STATISTICS [stats_Product_Name] on [Production].[Product] ([Name]);
	    
		CREATE STATISTICS [stats_Product_ProductNumber] on [Production].[Product] ([ProductNumber]);
	    
		CREATE STATISTICS [stats_Product_MakeFlag] on [Production].[Product] ([MakeFlag]);
	    
		CREATE STATISTICS [stats_Product_FinishedGoodsFlag] on [Production].[Product] ([FinishedGoodsFlag]);
	    
		CREATE STATISTICS [stats_Product_Color] on [Production].[Product] ([Color]);
	    
		CREATE STATISTICS [stats_Product_SafetyStockLevel] on [Production].[Product] ([SafetyStockLevel]);
	    
		CREATE STATISTICS [stats_Product_ReorderPoint] on [Production].[Product] ([ReorderPoint]);
	    
		CREATE STATISTICS [stats_Product_StandardCost] on [Production].[Product] ([StandardCost]);
	    
		CREATE STATISTICS [stats_Product_ListPrice] on [Production].[Product] ([ListPrice]);
	    
		CREATE STATISTICS [stats_Product_Size] on [Production].[Product] ([Size]);
	    
		CREATE STATISTICS [stats_Product_SizeUnitMeasureCode] on [Production].[Product] ([SizeUnitMeasureCode]);
	    
		CREATE STATISTICS [stats_Product_WeightUnitMeasureCode] on [Production].[Product] ([WeightUnitMeasureCode]);
	    
		CREATE STATISTICS [stats_Product_Weight] on [Production].[Product] ([Weight]);
	    
		CREATE STATISTICS [stats_Product_DaysToManufacture] on [Production].[Product] ([DaysToManufacture]);
	    
		CREATE STATISTICS [stats_Product_ProductLine] on [Production].[Product] ([ProductLine]);
	    
		CREATE STATISTICS [stats_Product_Class] on [Production].[Product] ([Class]);
	    
		CREATE STATISTICS [stats_Product_Style] on [Production].[Product] ([Style]);
	    
		CREATE STATISTICS [stats_Product_ProductSubcategoryID] on [Production].[Product] ([ProductSubcategoryID]);
	    
		CREATE STATISTICS [stats_Product_ProductModelID] on [Production].[Product] ([ProductModelID]);
	    
		CREATE STATISTICS [stats_Product_SellStartDate] on [Production].[Product] ([SellStartDate]);
	    
		CREATE STATISTICS [stats_Product_SellEndDate] on [Production].[Product] ([SellEndDate]);
	    
		CREATE STATISTICS [stats_Product_DiscontinuedDate] on [Production].[Product] ([DiscontinuedDate]);
	    
		CREATE STATISTICS [stats_Product_rowguid] on [Production].[Product] ([rowguid]);
	    
		CREATE STATISTICS [stats_Product_ModifiedDate] on [Production].[Product] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Production.ProductCategory
-----------------------------------------------------------------------------------------------------
IF (object_id('[Production].[ProductCategory]') IS NOT NULL)
			DROP  TABLE [Production].[ProductCategory];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Production].[ProductCategory]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [ProductCategoryID] ,[Name] ,[rowguid] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Production].[ProductCategory_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_ProductCategory_ProductCategoryID] on [Production].[ProductCategory] ([ProductCategoryID]);
	    
		CREATE STATISTICS [stats_ProductCategory_Name] on [Production].[ProductCategory] ([Name]);
	    
		CREATE STATISTICS [stats_ProductCategory_rowguid] on [Production].[ProductCategory] ([rowguid]);
	    
		CREATE STATISTICS [stats_ProductCategory_ModifiedDate] on [Production].[ProductCategory] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Production.ProductCostHistory
-----------------------------------------------------------------------------------------------------
IF (object_id('[Production].[ProductCostHistory]') IS NOT NULL)
			DROP  TABLE [Production].[ProductCostHistory];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Production].[ProductCostHistory]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [ProductID] ,cast(convert(datetime2,[StartDate] ,121) as datetime) as [StartDate] ,cast(convert(datetime2,[EndDate] ,121) as datetime) as [EndDate] ,[StandardCost] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Production].[ProductCostHistory_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_ProductCostHistory_ProductID] on [Production].[ProductCostHistory] ([ProductID]);
	    
		CREATE STATISTICS [stats_ProductCostHistory_StartDate] on [Production].[ProductCostHistory] ([StartDate]);
	    
		CREATE STATISTICS [stats_ProductCostHistory_EndDate] on [Production].[ProductCostHistory] ([EndDate]);
	    
		CREATE STATISTICS [stats_ProductCostHistory_StandardCost] on [Production].[ProductCostHistory] ([StandardCost]);
	    
		CREATE STATISTICS [stats_ProductCostHistory_ModifiedDate] on [Production].[ProductCostHistory] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Production.ProductDescription
-----------------------------------------------------------------------------------------------------
IF (object_id('[Production].[ProductDescription]') IS NOT NULL)
			DROP  TABLE [Production].[ProductDescription];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Production].[ProductDescription]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [ProductDescriptionID] ,[Description] ,[rowguid] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Production].[ProductDescription_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_ProductDescription_ProductDescriptionID] on [Production].[ProductDescription] ([ProductDescriptionID]);
	    
		CREATE STATISTICS [stats_ProductDescription_Description] on [Production].[ProductDescription] ([Description]);
	    
		CREATE STATISTICS [stats_ProductDescription_rowguid] on [Production].[ProductDescription] ([rowguid]);
	    
		CREATE STATISTICS [stats_ProductDescription_ModifiedDate] on [Production].[ProductDescription] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Production.ProductDocument
-----------------------------------------------------------------------------------------------------
IF (object_id('[Production].[ProductDocument]') IS NOT NULL)
			DROP  TABLE [Production].[ProductDocument];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Production].[ProductDocument]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [ProductID] ,[DocumentNode]  is a UserDefinedType and must be FIXED MANUALLY!! ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Production].[ProductDocument_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_ProductDocument_ProductID] on [Production].[ProductDocument] ([ProductID]);
	    
		CREATE STATISTICS [stats_ProductDocument_DocumentNode] on [Production].[ProductDocument] ([DocumentNode]);
	    
		CREATE STATISTICS [stats_ProductDocument_ModifiedDate] on [Production].[ProductDocument] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Production.ProductInventory
-----------------------------------------------------------------------------------------------------
IF (object_id('[Production].[ProductInventory]') IS NOT NULL)
			DROP  TABLE [Production].[ProductInventory];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Production].[ProductInventory]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [ProductID] ,[LocationID] ,[Shelf] ,[Bin] ,[Quantity] ,[rowguid] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Production].[ProductInventory_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_ProductInventory_ProductID] on [Production].[ProductInventory] ([ProductID]);
	    
		CREATE STATISTICS [stats_ProductInventory_LocationID] on [Production].[ProductInventory] ([LocationID]);
	    
		CREATE STATISTICS [stats_ProductInventory_Shelf] on [Production].[ProductInventory] ([Shelf]);
	    
		CREATE STATISTICS [stats_ProductInventory_Bin] on [Production].[ProductInventory] ([Bin]);
	    
		CREATE STATISTICS [stats_ProductInventory_Quantity] on [Production].[ProductInventory] ([Quantity]);
	    
		CREATE STATISTICS [stats_ProductInventory_rowguid] on [Production].[ProductInventory] ([rowguid]);
	    
		CREATE STATISTICS [stats_ProductInventory_ModifiedDate] on [Production].[ProductInventory] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Production.ProductListPriceHistory
-----------------------------------------------------------------------------------------------------
IF (object_id('[Production].[ProductListPriceHistory]') IS NOT NULL)
			DROP  TABLE [Production].[ProductListPriceHistory];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Production].[ProductListPriceHistory]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [ProductID] ,cast(convert(datetime2,[StartDate] ,121) as datetime) as [StartDate] ,cast(convert(datetime2,[EndDate] ,121) as datetime) as [EndDate] ,[ListPrice] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Production].[ProductListPriceHistory_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_ProductListPriceHistory_ProductID] on [Production].[ProductListPriceHistory] ([ProductID]);
	    
		CREATE STATISTICS [stats_ProductListPriceHistory_StartDate] on [Production].[ProductListPriceHistory] ([StartDate]);
	    
		CREATE STATISTICS [stats_ProductListPriceHistory_EndDate] on [Production].[ProductListPriceHistory] ([EndDate]);
	    
		CREATE STATISTICS [stats_ProductListPriceHistory_ListPrice] on [Production].[ProductListPriceHistory] ([ListPrice]);
	    
		CREATE STATISTICS [stats_ProductListPriceHistory_ModifiedDate] on [Production].[ProductListPriceHistory] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Production.ProductModel
-----------------------------------------------------------------------------------------------------
IF (object_id('[Production].[ProductModel]') IS NOT NULL)
			DROP  TABLE [Production].[ProductModel];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Production].[ProductModel]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [ProductModelID] ,[Name] ,[CatalogDescription] ,[Instructions] ,[rowguid] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Production].[ProductModel_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_ProductModel_ProductModelID] on [Production].[ProductModel] ([ProductModelID]);
	    
		CREATE STATISTICS [stats_ProductModel_Name] on [Production].[ProductModel] ([Name]);
	    
		CREATE STATISTICS [stats_ProductModel_CatalogDescription] on [Production].[ProductModel] ([CatalogDescription]);
	    
		CREATE STATISTICS [stats_ProductModel_Instructions] on [Production].[ProductModel] ([Instructions]);
	    
		CREATE STATISTICS [stats_ProductModel_rowguid] on [Production].[ProductModel] ([rowguid]);
	    
		CREATE STATISTICS [stats_ProductModel_ModifiedDate] on [Production].[ProductModel] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Production.ProductModelIllustration
-----------------------------------------------------------------------------------------------------
IF (object_id('[Production].[ProductModelIllustration]') IS NOT NULL)
			DROP  TABLE [Production].[ProductModelIllustration];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Production].[ProductModelIllustration]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [ProductModelID] ,[IllustrationID] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Production].[ProductModelIllustration_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_ProductModelIllustration_ProductModelID] on [Production].[ProductModelIllustration] ([ProductModelID]);
	    
		CREATE STATISTICS [stats_ProductModelIllustration_IllustrationID] on [Production].[ProductModelIllustration] ([IllustrationID]);
	    
		CREATE STATISTICS [stats_ProductModelIllustration_ModifiedDate] on [Production].[ProductModelIllustration] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Production.ProductModelProductDescriptionCulture
-----------------------------------------------------------------------------------------------------
IF (object_id('[Production].[ProductModelProductDescriptionCulture]') IS NOT NULL)
			DROP  TABLE [Production].[ProductModelProductDescriptionCulture];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Production].[ProductModelProductDescriptionCulture]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [ProductModelID] ,[ProductDescriptionID] ,[CultureID] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Production].[ProductModelProductDescriptionCulture_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_ProductModelProductDescriptionCulture_ProductModelID] on [Production].[ProductModelProductDescriptionCulture] ([ProductModelID]);
	    
		CREATE STATISTICS [stats_ProductModelProductDescriptionCulture_ProductDescriptionID] on [Production].[ProductModelProductDescriptionCulture] ([ProductDescriptionID]);
	    
		CREATE STATISTICS [stats_ProductModelProductDescriptionCulture_CultureID] on [Production].[ProductModelProductDescriptionCulture] ([CultureID]);
	    
		CREATE STATISTICS [stats_ProductModelProductDescriptionCulture_ModifiedDate] on [Production].[ProductModelProductDescriptionCulture] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Production.ProductPhoto
-----------------------------------------------------------------------------------------------------
IF (object_id('[Production].[ProductPhoto]') IS NOT NULL)
			DROP  TABLE [Production].[ProductPhoto];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Production].[ProductPhoto]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [ProductPhotoID] ,[ThumbNailPhoto] ,[ThumbnailPhotoFileName] ,[LargePhoto] ,[LargePhotoFileName] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Production].[ProductPhoto_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_ProductPhoto_ProductPhotoID] on [Production].[ProductPhoto] ([ProductPhotoID]);
	    
		CREATE STATISTICS [stats_ProductPhoto_ThumbNailPhoto] on [Production].[ProductPhoto] ([ThumbNailPhoto]);
	    
		CREATE STATISTICS [stats_ProductPhoto_ThumbnailPhotoFileName] on [Production].[ProductPhoto] ([ThumbnailPhotoFileName]);
	    
		CREATE STATISTICS [stats_ProductPhoto_LargePhoto] on [Production].[ProductPhoto] ([LargePhoto]);
	    
		CREATE STATISTICS [stats_ProductPhoto_LargePhotoFileName] on [Production].[ProductPhoto] ([LargePhotoFileName]);
	    
		CREATE STATISTICS [stats_ProductPhoto_ModifiedDate] on [Production].[ProductPhoto] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Production.ProductProductPhoto
-----------------------------------------------------------------------------------------------------
IF (object_id('[Production].[ProductProductPhoto]') IS NOT NULL)
			DROP  TABLE [Production].[ProductProductPhoto];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Production].[ProductProductPhoto]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [ProductID] ,[ProductPhotoID] ,[Primary] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Production].[ProductProductPhoto_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_ProductProductPhoto_ProductID] on [Production].[ProductProductPhoto] ([ProductID]);
	    
		CREATE STATISTICS [stats_ProductProductPhoto_ProductPhotoID] on [Production].[ProductProductPhoto] ([ProductPhotoID]);
	    
		CREATE STATISTICS [stats_ProductProductPhoto_Primary] on [Production].[ProductProductPhoto] ([Primary]);
	    
		CREATE STATISTICS [stats_ProductProductPhoto_ModifiedDate] on [Production].[ProductProductPhoto] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Production.ProductReview
-----------------------------------------------------------------------------------------------------
IF (object_id('[Production].[ProductReview]') IS NOT NULL)
			DROP  TABLE [Production].[ProductReview];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Production].[ProductReview]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [ProductReviewID] ,[ProductID] ,[ReviewerName] ,cast(convert(datetime2,[ReviewDate] ,121) as datetime) as [ReviewDate] ,[EmailAddress] ,[Rating] ,[Comments] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Production].[ProductReview_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_ProductReview_ProductReviewID] on [Production].[ProductReview] ([ProductReviewID]);
	    
		CREATE STATISTICS [stats_ProductReview_ProductID] on [Production].[ProductReview] ([ProductID]);
	    
		CREATE STATISTICS [stats_ProductReview_ReviewerName] on [Production].[ProductReview] ([ReviewerName]);
	    
		CREATE STATISTICS [stats_ProductReview_ReviewDate] on [Production].[ProductReview] ([ReviewDate]);
	    
		CREATE STATISTICS [stats_ProductReview_EmailAddress] on [Production].[ProductReview] ([EmailAddress]);
	    
		CREATE STATISTICS [stats_ProductReview_Rating] on [Production].[ProductReview] ([Rating]);
	    
		CREATE STATISTICS [stats_ProductReview_Comments] on [Production].[ProductReview] ([Comments]);
	    
		CREATE STATISTICS [stats_ProductReview_ModifiedDate] on [Production].[ProductReview] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Production.ProductSubcategory
-----------------------------------------------------------------------------------------------------
IF (object_id('[Production].[ProductSubcategory]') IS NOT NULL)
			DROP  TABLE [Production].[ProductSubcategory];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Production].[ProductSubcategory]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [ProductSubcategoryID] ,[ProductCategoryID] ,[Name] ,[rowguid] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Production].[ProductSubcategory_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_ProductSubcategory_ProductSubcategoryID] on [Production].[ProductSubcategory] ([ProductSubcategoryID]);
	    
		CREATE STATISTICS [stats_ProductSubcategory_ProductCategoryID] on [Production].[ProductSubcategory] ([ProductCategoryID]);
	    
		CREATE STATISTICS [stats_ProductSubcategory_Name] on [Production].[ProductSubcategory] ([Name]);
	    
		CREATE STATISTICS [stats_ProductSubcategory_rowguid] on [Production].[ProductSubcategory] ([rowguid]);
	    
		CREATE STATISTICS [stats_ProductSubcategory_ModifiedDate] on [Production].[ProductSubcategory] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Production.ScrapReason
-----------------------------------------------------------------------------------------------------
IF (object_id('[Production].[ScrapReason]') IS NOT NULL)
			DROP  TABLE [Production].[ScrapReason];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Production].[ScrapReason]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [ScrapReasonID] ,[Name] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Production].[ScrapReason_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_ScrapReason_ScrapReasonID] on [Production].[ScrapReason] ([ScrapReasonID]);
	    
		CREATE STATISTICS [stats_ScrapReason_Name] on [Production].[ScrapReason] ([Name]);
	    
		CREATE STATISTICS [stats_ScrapReason_ModifiedDate] on [Production].[ScrapReason] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Production.TransactionHistory
-----------------------------------------------------------------------------------------------------
IF (object_id('[Production].[TransactionHistory]') IS NOT NULL)
			DROP  TABLE [Production].[TransactionHistory];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Production].[TransactionHistory]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [TransactionID] ,[ProductID] ,[ReferenceOrderID] ,[ReferenceOrderLineID] ,cast(convert(datetime2,[TransactionDate] ,121) as datetime) as [TransactionDate] ,[TransactionType] ,[Quantity] ,[ActualCost] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Production].[TransactionHistory_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_TransactionHistory_TransactionID] on [Production].[TransactionHistory] ([TransactionID]);
	    
		CREATE STATISTICS [stats_TransactionHistory_ProductID] on [Production].[TransactionHistory] ([ProductID]);
	    
		CREATE STATISTICS [stats_TransactionHistory_ReferenceOrderID] on [Production].[TransactionHistory] ([ReferenceOrderID]);
	    
		CREATE STATISTICS [stats_TransactionHistory_ReferenceOrderLineID] on [Production].[TransactionHistory] ([ReferenceOrderLineID]);
	    
		CREATE STATISTICS [stats_TransactionHistory_TransactionDate] on [Production].[TransactionHistory] ([TransactionDate]);
	    
		CREATE STATISTICS [stats_TransactionHistory_TransactionType] on [Production].[TransactionHistory] ([TransactionType]);
	    
		CREATE STATISTICS [stats_TransactionHistory_Quantity] on [Production].[TransactionHistory] ([Quantity]);
	    
		CREATE STATISTICS [stats_TransactionHistory_ActualCost] on [Production].[TransactionHistory] ([ActualCost]);
	    
		CREATE STATISTICS [stats_TransactionHistory_ModifiedDate] on [Production].[TransactionHistory] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Production.TransactionHistoryArchive
-----------------------------------------------------------------------------------------------------
IF (object_id('[Production].[TransactionHistoryArchive]') IS NOT NULL)
			DROP  TABLE [Production].[TransactionHistoryArchive];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Production].[TransactionHistoryArchive]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [TransactionID] ,[ProductID] ,[ReferenceOrderID] ,[ReferenceOrderLineID] ,cast(convert(datetime2,[TransactionDate] ,121) as datetime) as [TransactionDate] ,[TransactionType] ,[Quantity] ,[ActualCost] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Production].[TransactionHistoryArchive_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_TransactionHistoryArchive_TransactionID] on [Production].[TransactionHistoryArchive] ([TransactionID]);
	    
		CREATE STATISTICS [stats_TransactionHistoryArchive_ProductID] on [Production].[TransactionHistoryArchive] ([ProductID]);
	    
		CREATE STATISTICS [stats_TransactionHistoryArchive_ReferenceOrderID] on [Production].[TransactionHistoryArchive] ([ReferenceOrderID]);
	    
		CREATE STATISTICS [stats_TransactionHistoryArchive_ReferenceOrderLineID] on [Production].[TransactionHistoryArchive] ([ReferenceOrderLineID]);
	    
		CREATE STATISTICS [stats_TransactionHistoryArchive_TransactionDate] on [Production].[TransactionHistoryArchive] ([TransactionDate]);
	    
		CREATE STATISTICS [stats_TransactionHistoryArchive_TransactionType] on [Production].[TransactionHistoryArchive] ([TransactionType]);
	    
		CREATE STATISTICS [stats_TransactionHistoryArchive_Quantity] on [Production].[TransactionHistoryArchive] ([Quantity]);
	    
		CREATE STATISTICS [stats_TransactionHistoryArchive_ActualCost] on [Production].[TransactionHistoryArchive] ([ActualCost]);
	    
		CREATE STATISTICS [stats_TransactionHistoryArchive_ModifiedDate] on [Production].[TransactionHistoryArchive] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Production.UnitMeasure
-----------------------------------------------------------------------------------------------------
IF (object_id('[Production].[UnitMeasure]') IS NOT NULL)
			DROP  TABLE [Production].[UnitMeasure];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Production].[UnitMeasure]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [UnitMeasureCode] ,[Name] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Production].[UnitMeasure_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_UnitMeasure_UnitMeasureCode] on [Production].[UnitMeasure] ([UnitMeasureCode]);
	    
		CREATE STATISTICS [stats_UnitMeasure_Name] on [Production].[UnitMeasure] ([Name]);
	    
		CREATE STATISTICS [stats_UnitMeasure_ModifiedDate] on [Production].[UnitMeasure] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Production.WorkOrder
-----------------------------------------------------------------------------------------------------
IF (object_id('[Production].[WorkOrder]') IS NOT NULL)
			DROP  TABLE [Production].[WorkOrder];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Production].[WorkOrder]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [WorkOrderID] ,[ProductID] ,[OrderQty] ,,[ScrappedQty] ,cast(convert(datetime2,[StartDate] ,121) as datetime) as [StartDate] ,cast(convert(datetime2,[EndDate] ,121) as datetime) as [EndDate] ,cast(convert(datetime2,[DueDate] ,121) as datetime) as [DueDate] ,[ScrapReasonID] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Production].[WorkOrder_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_WorkOrder_WorkOrderID] on [Production].[WorkOrder] ([WorkOrderID]);
	    
		CREATE STATISTICS [stats_WorkOrder_ProductID] on [Production].[WorkOrder] ([ProductID]);
	    
		CREATE STATISTICS [stats_WorkOrder_OrderQty] on [Production].[WorkOrder] ([OrderQty]);
	    
		CREATE STATISTICS [stats_WorkOrder_StockedQty] on [Production].[WorkOrder] ([StockedQty]);
	    
		CREATE STATISTICS [stats_WorkOrder_ScrappedQty] on [Production].[WorkOrder] ([ScrappedQty]);
	    
		CREATE STATISTICS [stats_WorkOrder_StartDate] on [Production].[WorkOrder] ([StartDate]);
	    
		CREATE STATISTICS [stats_WorkOrder_EndDate] on [Production].[WorkOrder] ([EndDate]);
	    
		CREATE STATISTICS [stats_WorkOrder_DueDate] on [Production].[WorkOrder] ([DueDate]);
	    
		CREATE STATISTICS [stats_WorkOrder_ScrapReasonID] on [Production].[WorkOrder] ([ScrapReasonID]);
	    
		CREATE STATISTICS [stats_WorkOrder_ModifiedDate] on [Production].[WorkOrder] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Production.WorkOrderRouting
-----------------------------------------------------------------------------------------------------
IF (object_id('[Production].[WorkOrderRouting]') IS NOT NULL)
			DROP  TABLE [Production].[WorkOrderRouting];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Production].[WorkOrderRouting]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [WorkOrderID] ,[ProductID] ,[OperationSequence] ,[LocationID] ,cast(convert(datetime2,[ScheduledStartDate] ,121) as datetime) as [ScheduledStartDate] ,cast(convert(datetime2,[ScheduledEndDate] ,121) as datetime) as [ScheduledEndDate] ,cast(convert(datetime2,[ActualStartDate] ,121) as datetime) as [ActualStartDate] ,cast(convert(datetime2,[ActualEndDate] ,121) as datetime) as [ActualEndDate] ,[ActualResourceHrs] ,[PlannedCost] ,[ActualCost] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Production].[WorkOrderRouting_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_WorkOrderRouting_WorkOrderID] on [Production].[WorkOrderRouting] ([WorkOrderID]);
	    
		CREATE STATISTICS [stats_WorkOrderRouting_ProductID] on [Production].[WorkOrderRouting] ([ProductID]);
	    
		CREATE STATISTICS [stats_WorkOrderRouting_OperationSequence] on [Production].[WorkOrderRouting] ([OperationSequence]);
	    
		CREATE STATISTICS [stats_WorkOrderRouting_LocationID] on [Production].[WorkOrderRouting] ([LocationID]);
	    
		CREATE STATISTICS [stats_WorkOrderRouting_ScheduledStartDate] on [Production].[WorkOrderRouting] ([ScheduledStartDate]);
	    
		CREATE STATISTICS [stats_WorkOrderRouting_ScheduledEndDate] on [Production].[WorkOrderRouting] ([ScheduledEndDate]);
	    
		CREATE STATISTICS [stats_WorkOrderRouting_ActualStartDate] on [Production].[WorkOrderRouting] ([ActualStartDate]);
	    
		CREATE STATISTICS [stats_WorkOrderRouting_ActualEndDate] on [Production].[WorkOrderRouting] ([ActualEndDate]);
	    
		CREATE STATISTICS [stats_WorkOrderRouting_ActualResourceHrs] on [Production].[WorkOrderRouting] ([ActualResourceHrs]);
	    
		CREATE STATISTICS [stats_WorkOrderRouting_PlannedCost] on [Production].[WorkOrderRouting] ([PlannedCost]);
	    
		CREATE STATISTICS [stats_WorkOrderRouting_ActualCost] on [Production].[WorkOrderRouting] ([ActualCost]);
	    
		CREATE STATISTICS [stats_WorkOrderRouting_ModifiedDate] on [Production].[WorkOrderRouting] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Purchasing.ProductVendor
-----------------------------------------------------------------------------------------------------
IF (object_id('[Purchasing].[ProductVendor]') IS NOT NULL)
			DROP  TABLE [Purchasing].[ProductVendor];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Purchasing].[ProductVendor]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [ProductID] ,[BusinessEntityID] ,[AverageLeadTime] ,[StandardPrice] ,[LastReceiptCost] ,cast(convert(datetime2,[LastReceiptDate] ,121) as datetime) as [LastReceiptDate] ,[MinOrderQty] ,[MaxOrderQty] ,[OnOrderQty] ,[UnitMeasureCode] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Purchasing].[ProductVendor_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_ProductVendor_ProductID] on [Purchasing].[ProductVendor] ([ProductID]);
	    
		CREATE STATISTICS [stats_ProductVendor_BusinessEntityID] on [Purchasing].[ProductVendor] ([BusinessEntityID]);
	    
		CREATE STATISTICS [stats_ProductVendor_AverageLeadTime] on [Purchasing].[ProductVendor] ([AverageLeadTime]);
	    
		CREATE STATISTICS [stats_ProductVendor_StandardPrice] on [Purchasing].[ProductVendor] ([StandardPrice]);
	    
		CREATE STATISTICS [stats_ProductVendor_LastReceiptCost] on [Purchasing].[ProductVendor] ([LastReceiptCost]);
	    
		CREATE STATISTICS [stats_ProductVendor_LastReceiptDate] on [Purchasing].[ProductVendor] ([LastReceiptDate]);
	    
		CREATE STATISTICS [stats_ProductVendor_MinOrderQty] on [Purchasing].[ProductVendor] ([MinOrderQty]);
	    
		CREATE STATISTICS [stats_ProductVendor_MaxOrderQty] on [Purchasing].[ProductVendor] ([MaxOrderQty]);
	    
		CREATE STATISTICS [stats_ProductVendor_OnOrderQty] on [Purchasing].[ProductVendor] ([OnOrderQty]);
	    
		CREATE STATISTICS [stats_ProductVendor_UnitMeasureCode] on [Purchasing].[ProductVendor] ([UnitMeasureCode]);
	    
		CREATE STATISTICS [stats_ProductVendor_ModifiedDate] on [Purchasing].[ProductVendor] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Purchasing.PurchaseOrderDetail
-----------------------------------------------------------------------------------------------------
IF (object_id('[Purchasing].[PurchaseOrderDetail]') IS NOT NULL)
			DROP  TABLE [Purchasing].[PurchaseOrderDetail];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Purchasing].[PurchaseOrderDetail]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [PurchaseOrderID] ,[PurchaseOrderDetailID] ,cast(convert(datetime2,[DueDate] ,121) as datetime) as [DueDate] ,[OrderQty] ,[ProductID] ,[UnitPrice] ,,[ReceivedQty] ,[RejectedQty] ,,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Purchasing].[PurchaseOrderDetail_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_PurchaseOrderDetail_PurchaseOrderID] on [Purchasing].[PurchaseOrderDetail] ([PurchaseOrderID]);
	    
		CREATE STATISTICS [stats_PurchaseOrderDetail_PurchaseOrderDetailID] on [Purchasing].[PurchaseOrderDetail] ([PurchaseOrderDetailID]);
	    
		CREATE STATISTICS [stats_PurchaseOrderDetail_DueDate] on [Purchasing].[PurchaseOrderDetail] ([DueDate]);
	    
		CREATE STATISTICS [stats_PurchaseOrderDetail_OrderQty] on [Purchasing].[PurchaseOrderDetail] ([OrderQty]);
	    
		CREATE STATISTICS [stats_PurchaseOrderDetail_ProductID] on [Purchasing].[PurchaseOrderDetail] ([ProductID]);
	    
		CREATE STATISTICS [stats_PurchaseOrderDetail_UnitPrice] on [Purchasing].[PurchaseOrderDetail] ([UnitPrice]);
	    
		CREATE STATISTICS [stats_PurchaseOrderDetail_LineTotal] on [Purchasing].[PurchaseOrderDetail] ([LineTotal]);
	    
		CREATE STATISTICS [stats_PurchaseOrderDetail_ReceivedQty] on [Purchasing].[PurchaseOrderDetail] ([ReceivedQty]);
	    
		CREATE STATISTICS [stats_PurchaseOrderDetail_RejectedQty] on [Purchasing].[PurchaseOrderDetail] ([RejectedQty]);
	    
		CREATE STATISTICS [stats_PurchaseOrderDetail_StockedQty] on [Purchasing].[PurchaseOrderDetail] ([StockedQty]);
	    
		CREATE STATISTICS [stats_PurchaseOrderDetail_ModifiedDate] on [Purchasing].[PurchaseOrderDetail] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Purchasing.PurchaseOrderHeader
-----------------------------------------------------------------------------------------------------
IF (object_id('[Purchasing].[PurchaseOrderHeader]') IS NOT NULL)
			DROP  TABLE [Purchasing].[PurchaseOrderHeader];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Purchasing].[PurchaseOrderHeader]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [PurchaseOrderID] ,[RevisionNumber] ,[Status] ,[EmployeeID] ,[VendorID] ,[ShipMethodID] ,cast(convert(datetime2,[OrderDate] ,121) as datetime) as [OrderDate] ,cast(convert(datetime2,[ShipDate] ,121) as datetime) as [ShipDate] ,[SubTotal] ,[TaxAmt] ,[Freight] ,,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Purchasing].[PurchaseOrderHeader_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_PurchaseOrderHeader_PurchaseOrderID] on [Purchasing].[PurchaseOrderHeader] ([PurchaseOrderID]);
	    
		CREATE STATISTICS [stats_PurchaseOrderHeader_RevisionNumber] on [Purchasing].[PurchaseOrderHeader] ([RevisionNumber]);
	    
		CREATE STATISTICS [stats_PurchaseOrderHeader_Status] on [Purchasing].[PurchaseOrderHeader] ([Status]);
	    
		CREATE STATISTICS [stats_PurchaseOrderHeader_EmployeeID] on [Purchasing].[PurchaseOrderHeader] ([EmployeeID]);
	    
		CREATE STATISTICS [stats_PurchaseOrderHeader_VendorID] on [Purchasing].[PurchaseOrderHeader] ([VendorID]);
	    
		CREATE STATISTICS [stats_PurchaseOrderHeader_ShipMethodID] on [Purchasing].[PurchaseOrderHeader] ([ShipMethodID]);
	    
		CREATE STATISTICS [stats_PurchaseOrderHeader_OrderDate] on [Purchasing].[PurchaseOrderHeader] ([OrderDate]);
	    
		CREATE STATISTICS [stats_PurchaseOrderHeader_ShipDate] on [Purchasing].[PurchaseOrderHeader] ([ShipDate]);
	    
		CREATE STATISTICS [stats_PurchaseOrderHeader_SubTotal] on [Purchasing].[PurchaseOrderHeader] ([SubTotal]);
	    
		CREATE STATISTICS [stats_PurchaseOrderHeader_TaxAmt] on [Purchasing].[PurchaseOrderHeader] ([TaxAmt]);
	    
		CREATE STATISTICS [stats_PurchaseOrderHeader_Freight] on [Purchasing].[PurchaseOrderHeader] ([Freight]);
	    
		CREATE STATISTICS [stats_PurchaseOrderHeader_TotalDue] on [Purchasing].[PurchaseOrderHeader] ([TotalDue]);
	    
		CREATE STATISTICS [stats_PurchaseOrderHeader_ModifiedDate] on [Purchasing].[PurchaseOrderHeader] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Purchasing.ShipMethod
-----------------------------------------------------------------------------------------------------
IF (object_id('[Purchasing].[ShipMethod]') IS NOT NULL)
			DROP  TABLE [Purchasing].[ShipMethod];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Purchasing].[ShipMethod]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [ShipMethodID] ,[Name] ,[ShipBase] ,[ShipRate] ,[rowguid] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Purchasing].[ShipMethod_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_ShipMethod_ShipMethodID] on [Purchasing].[ShipMethod] ([ShipMethodID]);
	    
		CREATE STATISTICS [stats_ShipMethod_Name] on [Purchasing].[ShipMethod] ([Name]);
	    
		CREATE STATISTICS [stats_ShipMethod_ShipBase] on [Purchasing].[ShipMethod] ([ShipBase]);
	    
		CREATE STATISTICS [stats_ShipMethod_ShipRate] on [Purchasing].[ShipMethod] ([ShipRate]);
	    
		CREATE STATISTICS [stats_ShipMethod_rowguid] on [Purchasing].[ShipMethod] ([rowguid]);
	    
		CREATE STATISTICS [stats_ShipMethod_ModifiedDate] on [Purchasing].[ShipMethod] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Purchasing.Vendor
-----------------------------------------------------------------------------------------------------
IF (object_id('[Purchasing].[Vendor]') IS NOT NULL)
			DROP  TABLE [Purchasing].[Vendor];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Purchasing].[Vendor]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [BusinessEntityID] ,[AccountNumber] ,[Name] ,[CreditRating] ,[PreferredVendorStatus] ,[ActiveFlag] ,[PurchasingWebServiceURL] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Purchasing].[Vendor_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_Vendor_BusinessEntityID] on [Purchasing].[Vendor] ([BusinessEntityID]);
	    
		CREATE STATISTICS [stats_Vendor_AccountNumber] on [Purchasing].[Vendor] ([AccountNumber]);
	    
		CREATE STATISTICS [stats_Vendor_Name] on [Purchasing].[Vendor] ([Name]);
	    
		CREATE STATISTICS [stats_Vendor_CreditRating] on [Purchasing].[Vendor] ([CreditRating]);
	    
		CREATE STATISTICS [stats_Vendor_PreferredVendorStatus] on [Purchasing].[Vendor] ([PreferredVendorStatus]);
	    
		CREATE STATISTICS [stats_Vendor_ActiveFlag] on [Purchasing].[Vendor] ([ActiveFlag]);
	    
		CREATE STATISTICS [stats_Vendor_PurchasingWebServiceURL] on [Purchasing].[Vendor] ([PurchasingWebServiceURL]);
	    
		CREATE STATISTICS [stats_Vendor_ModifiedDate] on [Purchasing].[Vendor] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Sales.CountryRegionCurrency
-----------------------------------------------------------------------------------------------------
IF (object_id('[Sales].[CountryRegionCurrency]') IS NOT NULL)
			DROP  TABLE [Sales].[CountryRegionCurrency];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Sales].[CountryRegionCurrency]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [CountryRegionCode] ,[CurrencyCode] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Sales].[CountryRegionCurrency_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_CountryRegionCurrency_CountryRegionCode] on [Sales].[CountryRegionCurrency] ([CountryRegionCode]);
	    
		CREATE STATISTICS [stats_CountryRegionCurrency_CurrencyCode] on [Sales].[CountryRegionCurrency] ([CurrencyCode]);
	    
		CREATE STATISTICS [stats_CountryRegionCurrency_ModifiedDate] on [Sales].[CountryRegionCurrency] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Sales.CreditCard
-----------------------------------------------------------------------------------------------------
IF (object_id('[Sales].[CreditCard]') IS NOT NULL)
			DROP  TABLE [Sales].[CreditCard];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Sales].[CreditCard]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [CreditCardID] ,[CardType] ,[CardNumber] ,[ExpMonth] ,[ExpYear] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Sales].[CreditCard_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_CreditCard_CreditCardID] on [Sales].[CreditCard] ([CreditCardID]);
	    
		CREATE STATISTICS [stats_CreditCard_CardType] on [Sales].[CreditCard] ([CardType]);
	    
		CREATE STATISTICS [stats_CreditCard_CardNumber] on [Sales].[CreditCard] ([CardNumber]);
	    
		CREATE STATISTICS [stats_CreditCard_ExpMonth] on [Sales].[CreditCard] ([ExpMonth]);
	    
		CREATE STATISTICS [stats_CreditCard_ExpYear] on [Sales].[CreditCard] ([ExpYear]);
	    
		CREATE STATISTICS [stats_CreditCard_ModifiedDate] on [Sales].[CreditCard] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Sales.Currency
-----------------------------------------------------------------------------------------------------
IF (object_id('[Sales].[Currency]') IS NOT NULL)
			DROP  TABLE [Sales].[Currency];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Sales].[Currency]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [CurrencyCode] ,[Name] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Sales].[Currency_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_Currency_CurrencyCode] on [Sales].[Currency] ([CurrencyCode]);
	    
		CREATE STATISTICS [stats_Currency_Name] on [Sales].[Currency] ([Name]);
	    
		CREATE STATISTICS [stats_Currency_ModifiedDate] on [Sales].[Currency] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Sales.CurrencyRate
-----------------------------------------------------------------------------------------------------
IF (object_id('[Sales].[CurrencyRate]') IS NOT NULL)
			DROP  TABLE [Sales].[CurrencyRate];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Sales].[CurrencyRate]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [CurrencyRateID] ,cast(convert(datetime2,[CurrencyRateDate] ,121) as datetime) as [CurrencyRateDate] ,[FromCurrencyCode] ,[ToCurrencyCode] ,[AverageRate] ,[EndOfDayRate] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Sales].[CurrencyRate_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_CurrencyRate_CurrencyRateID] on [Sales].[CurrencyRate] ([CurrencyRateID]);
	    
		CREATE STATISTICS [stats_CurrencyRate_CurrencyRateDate] on [Sales].[CurrencyRate] ([CurrencyRateDate]);
	    
		CREATE STATISTICS [stats_CurrencyRate_FromCurrencyCode] on [Sales].[CurrencyRate] ([FromCurrencyCode]);
	    
		CREATE STATISTICS [stats_CurrencyRate_ToCurrencyCode] on [Sales].[CurrencyRate] ([ToCurrencyCode]);
	    
		CREATE STATISTICS [stats_CurrencyRate_AverageRate] on [Sales].[CurrencyRate] ([AverageRate]);
	    
		CREATE STATISTICS [stats_CurrencyRate_EndOfDayRate] on [Sales].[CurrencyRate] ([EndOfDayRate]);
	    
		CREATE STATISTICS [stats_CurrencyRate_ModifiedDate] on [Sales].[CurrencyRate] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Sales.Customer
-----------------------------------------------------------------------------------------------------
IF (object_id('[Sales].[Customer]') IS NOT NULL)
			DROP  TABLE [Sales].[Customer];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Sales].[Customer]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [CustomerID] ,[PersonID] ,[StoreID] ,[TerritoryID] ,,[rowguid] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Sales].[Customer_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_Customer_CustomerID] on [Sales].[Customer] ([CustomerID]);
	    
		CREATE STATISTICS [stats_Customer_PersonID] on [Sales].[Customer] ([PersonID]);
	    
		CREATE STATISTICS [stats_Customer_StoreID] on [Sales].[Customer] ([StoreID]);
	    
		CREATE STATISTICS [stats_Customer_TerritoryID] on [Sales].[Customer] ([TerritoryID]);
	    
		CREATE STATISTICS [stats_Customer_AccountNumber] on [Sales].[Customer] ([AccountNumber]);
	    
		CREATE STATISTICS [stats_Customer_rowguid] on [Sales].[Customer] ([rowguid]);
	    
		CREATE STATISTICS [stats_Customer_ModifiedDate] on [Sales].[Customer] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Sales.PersonCreditCard
-----------------------------------------------------------------------------------------------------
IF (object_id('[Sales].[PersonCreditCard]') IS NOT NULL)
			DROP  TABLE [Sales].[PersonCreditCard];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Sales].[PersonCreditCard]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [BusinessEntityID] ,[CreditCardID] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Sales].[PersonCreditCard_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_PersonCreditCard_BusinessEntityID] on [Sales].[PersonCreditCard] ([BusinessEntityID]);
	    
		CREATE STATISTICS [stats_PersonCreditCard_CreditCardID] on [Sales].[PersonCreditCard] ([CreditCardID]);
	    
		CREATE STATISTICS [stats_PersonCreditCard_ModifiedDate] on [Sales].[PersonCreditCard] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Sales.SalesOrderDetail
-----------------------------------------------------------------------------------------------------
IF (object_id('[Sales].[SalesOrderDetail]') IS NOT NULL)
			DROP  TABLE [Sales].[SalesOrderDetail];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Sales].[SalesOrderDetail]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [SalesOrderID] ,[SalesOrderDetailID] ,[CarrierTrackingNumber] ,[OrderQty] ,[ProductID] ,[SpecialOfferID] ,[UnitPrice] ,[UnitPriceDiscount] ,,[rowguid] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Sales].[SalesOrderDetail_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_SalesOrderDetail_SalesOrderID] on [Sales].[SalesOrderDetail] ([SalesOrderID]);
	    
		CREATE STATISTICS [stats_SalesOrderDetail_SalesOrderDetailID] on [Sales].[SalesOrderDetail] ([SalesOrderDetailID]);
	    
		CREATE STATISTICS [stats_SalesOrderDetail_CarrierTrackingNumber] on [Sales].[SalesOrderDetail] ([CarrierTrackingNumber]);
	    
		CREATE STATISTICS [stats_SalesOrderDetail_OrderQty] on [Sales].[SalesOrderDetail] ([OrderQty]);
	    
		CREATE STATISTICS [stats_SalesOrderDetail_ProductID] on [Sales].[SalesOrderDetail] ([ProductID]);
	    
		CREATE STATISTICS [stats_SalesOrderDetail_SpecialOfferID] on [Sales].[SalesOrderDetail] ([SpecialOfferID]);
	    
		CREATE STATISTICS [stats_SalesOrderDetail_UnitPrice] on [Sales].[SalesOrderDetail] ([UnitPrice]);
	    
		CREATE STATISTICS [stats_SalesOrderDetail_UnitPriceDiscount] on [Sales].[SalesOrderDetail] ([UnitPriceDiscount]);
	    
		CREATE STATISTICS [stats_SalesOrderDetail_LineTotal] on [Sales].[SalesOrderDetail] ([LineTotal]);
	    
		CREATE STATISTICS [stats_SalesOrderDetail_rowguid] on [Sales].[SalesOrderDetail] ([rowguid]);
	    
		CREATE STATISTICS [stats_SalesOrderDetail_ModifiedDate] on [Sales].[SalesOrderDetail] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Sales.SalesOrderHeader
-----------------------------------------------------------------------------------------------------
IF (object_id('[Sales].[SalesOrderHeader]') IS NOT NULL)
			DROP  TABLE [Sales].[SalesOrderHeader];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Sales].[SalesOrderHeader]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [SalesOrderID] ,[RevisionNumber] ,cast(convert(datetime2,[OrderDate] ,121) as datetime) as [OrderDate] ,cast(convert(datetime2,[DueDate] ,121) as datetime) as [DueDate] ,cast(convert(datetime2,[ShipDate] ,121) as datetime) as [ShipDate] ,[Status] ,[OnlineOrderFlag] ,,[PurchaseOrderNumber] ,[AccountNumber] ,[CustomerID] ,[SalesPersonID] ,[TerritoryID] ,[BillToAddressID] ,[ShipToAddressID] ,[ShipMethodID] ,[CreditCardID] ,[CreditCardApprovalCode] ,[CurrencyRateID] ,[SubTotal] ,[TaxAmt] ,[Freight] ,,[Comment] ,[rowguid] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Sales].[SalesOrderHeader_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_SalesOrderHeader_SalesOrderID] on [Sales].[SalesOrderHeader] ([SalesOrderID]);
	    
		CREATE STATISTICS [stats_SalesOrderHeader_RevisionNumber] on [Sales].[SalesOrderHeader] ([RevisionNumber]);
	    
		CREATE STATISTICS [stats_SalesOrderHeader_OrderDate] on [Sales].[SalesOrderHeader] ([OrderDate]);
	    
		CREATE STATISTICS [stats_SalesOrderHeader_DueDate] on [Sales].[SalesOrderHeader] ([DueDate]);
	    
		CREATE STATISTICS [stats_SalesOrderHeader_ShipDate] on [Sales].[SalesOrderHeader] ([ShipDate]);
	    
		CREATE STATISTICS [stats_SalesOrderHeader_Status] on [Sales].[SalesOrderHeader] ([Status]);
	    
		CREATE STATISTICS [stats_SalesOrderHeader_OnlineOrderFlag] on [Sales].[SalesOrderHeader] ([OnlineOrderFlag]);
	    
		CREATE STATISTICS [stats_SalesOrderHeader_SalesOrderNumber] on [Sales].[SalesOrderHeader] ([SalesOrderNumber]);
	    
		CREATE STATISTICS [stats_SalesOrderHeader_PurchaseOrderNumber] on [Sales].[SalesOrderHeader] ([PurchaseOrderNumber]);
	    
		CREATE STATISTICS [stats_SalesOrderHeader_AccountNumber] on [Sales].[SalesOrderHeader] ([AccountNumber]);
	    
		CREATE STATISTICS [stats_SalesOrderHeader_CustomerID] on [Sales].[SalesOrderHeader] ([CustomerID]);
	    
		CREATE STATISTICS [stats_SalesOrderHeader_SalesPersonID] on [Sales].[SalesOrderHeader] ([SalesPersonID]);
	    
		CREATE STATISTICS [stats_SalesOrderHeader_TerritoryID] on [Sales].[SalesOrderHeader] ([TerritoryID]);
	    
		CREATE STATISTICS [stats_SalesOrderHeader_BillToAddressID] on [Sales].[SalesOrderHeader] ([BillToAddressID]);
	    
		CREATE STATISTICS [stats_SalesOrderHeader_ShipToAddressID] on [Sales].[SalesOrderHeader] ([ShipToAddressID]);
	    
		CREATE STATISTICS [stats_SalesOrderHeader_ShipMethodID] on [Sales].[SalesOrderHeader] ([ShipMethodID]);
	    
		CREATE STATISTICS [stats_SalesOrderHeader_CreditCardID] on [Sales].[SalesOrderHeader] ([CreditCardID]);
	    
		CREATE STATISTICS [stats_SalesOrderHeader_CreditCardApprovalCode] on [Sales].[SalesOrderHeader] ([CreditCardApprovalCode]);
	    
		CREATE STATISTICS [stats_SalesOrderHeader_CurrencyRateID] on [Sales].[SalesOrderHeader] ([CurrencyRateID]);
	    
		CREATE STATISTICS [stats_SalesOrderHeader_SubTotal] on [Sales].[SalesOrderHeader] ([SubTotal]);
	    
		CREATE STATISTICS [stats_SalesOrderHeader_TaxAmt] on [Sales].[SalesOrderHeader] ([TaxAmt]);
	    
		CREATE STATISTICS [stats_SalesOrderHeader_Freight] on [Sales].[SalesOrderHeader] ([Freight]);
	    
		CREATE STATISTICS [stats_SalesOrderHeader_TotalDue] on [Sales].[SalesOrderHeader] ([TotalDue]);
	    
		CREATE STATISTICS [stats_SalesOrderHeader_Comment] on [Sales].[SalesOrderHeader] ([Comment]);
	    
		CREATE STATISTICS [stats_SalesOrderHeader_rowguid] on [Sales].[SalesOrderHeader] ([rowguid]);
	    
		CREATE STATISTICS [stats_SalesOrderHeader_ModifiedDate] on [Sales].[SalesOrderHeader] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Sales.SalesOrderHeaderSalesReason
-----------------------------------------------------------------------------------------------------
IF (object_id('[Sales].[SalesOrderHeaderSalesReason]') IS NOT NULL)
			DROP  TABLE [Sales].[SalesOrderHeaderSalesReason];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Sales].[SalesOrderHeaderSalesReason]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [SalesOrderID] ,[SalesReasonID] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Sales].[SalesOrderHeaderSalesReason_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_SalesOrderHeaderSalesReason_SalesOrderID] on [Sales].[SalesOrderHeaderSalesReason] ([SalesOrderID]);
	    
		CREATE STATISTICS [stats_SalesOrderHeaderSalesReason_SalesReasonID] on [Sales].[SalesOrderHeaderSalesReason] ([SalesReasonID]);
	    
		CREATE STATISTICS [stats_SalesOrderHeaderSalesReason_ModifiedDate] on [Sales].[SalesOrderHeaderSalesReason] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Sales.SalesPerson
-----------------------------------------------------------------------------------------------------
IF (object_id('[Sales].[SalesPerson]') IS NOT NULL)
			DROP  TABLE [Sales].[SalesPerson];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Sales].[SalesPerson]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [BusinessEntityID] ,[TerritoryID] ,[SalesQuota] ,[Bonus] ,[CommissionPct] ,[SalesYTD] ,[SalesLastYear] ,[rowguid] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Sales].[SalesPerson_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_SalesPerson_BusinessEntityID] on [Sales].[SalesPerson] ([BusinessEntityID]);
	    
		CREATE STATISTICS [stats_SalesPerson_TerritoryID] on [Sales].[SalesPerson] ([TerritoryID]);
	    
		CREATE STATISTICS [stats_SalesPerson_SalesQuota] on [Sales].[SalesPerson] ([SalesQuota]);
	    
		CREATE STATISTICS [stats_SalesPerson_Bonus] on [Sales].[SalesPerson] ([Bonus]);
	    
		CREATE STATISTICS [stats_SalesPerson_CommissionPct] on [Sales].[SalesPerson] ([CommissionPct]);
	    
		CREATE STATISTICS [stats_SalesPerson_SalesYTD] on [Sales].[SalesPerson] ([SalesYTD]);
	    
		CREATE STATISTICS [stats_SalesPerson_SalesLastYear] on [Sales].[SalesPerson] ([SalesLastYear]);
	    
		CREATE STATISTICS [stats_SalesPerson_rowguid] on [Sales].[SalesPerson] ([rowguid]);
	    
		CREATE STATISTICS [stats_SalesPerson_ModifiedDate] on [Sales].[SalesPerson] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Sales.SalesPersonQuotaHistory
-----------------------------------------------------------------------------------------------------
IF (object_id('[Sales].[SalesPersonQuotaHistory]') IS NOT NULL)
			DROP  TABLE [Sales].[SalesPersonQuotaHistory];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Sales].[SalesPersonQuotaHistory]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [BusinessEntityID] ,cast(convert(datetime2,[QuotaDate] ,121) as datetime) as [QuotaDate] ,[SalesQuota] ,[rowguid] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Sales].[SalesPersonQuotaHistory_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_SalesPersonQuotaHistory_BusinessEntityID] on [Sales].[SalesPersonQuotaHistory] ([BusinessEntityID]);
	    
		CREATE STATISTICS [stats_SalesPersonQuotaHistory_QuotaDate] on [Sales].[SalesPersonQuotaHistory] ([QuotaDate]);
	    
		CREATE STATISTICS [stats_SalesPersonQuotaHistory_SalesQuota] on [Sales].[SalesPersonQuotaHistory] ([SalesQuota]);
	    
		CREATE STATISTICS [stats_SalesPersonQuotaHistory_rowguid] on [Sales].[SalesPersonQuotaHistory] ([rowguid]);
	    
		CREATE STATISTICS [stats_SalesPersonQuotaHistory_ModifiedDate] on [Sales].[SalesPersonQuotaHistory] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Sales.SalesReason
-----------------------------------------------------------------------------------------------------
IF (object_id('[Sales].[SalesReason]') IS NOT NULL)
			DROP  TABLE [Sales].[SalesReason];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Sales].[SalesReason]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [SalesReasonID] ,[Name] ,[ReasonType] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Sales].[SalesReason_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_SalesReason_SalesReasonID] on [Sales].[SalesReason] ([SalesReasonID]);
	    
		CREATE STATISTICS [stats_SalesReason_Name] on [Sales].[SalesReason] ([Name]);
	    
		CREATE STATISTICS [stats_SalesReason_ReasonType] on [Sales].[SalesReason] ([ReasonType]);
	    
		CREATE STATISTICS [stats_SalesReason_ModifiedDate] on [Sales].[SalesReason] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Sales.SalesTaxRate
-----------------------------------------------------------------------------------------------------
IF (object_id('[Sales].[SalesTaxRate]') IS NOT NULL)
			DROP  TABLE [Sales].[SalesTaxRate];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Sales].[SalesTaxRate]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [SalesTaxRateID] ,[StateProvinceID] ,[TaxType] ,[TaxRate] ,[Name] ,[rowguid] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Sales].[SalesTaxRate_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_SalesTaxRate_SalesTaxRateID] on [Sales].[SalesTaxRate] ([SalesTaxRateID]);
	    
		CREATE STATISTICS [stats_SalesTaxRate_StateProvinceID] on [Sales].[SalesTaxRate] ([StateProvinceID]);
	    
		CREATE STATISTICS [stats_SalesTaxRate_TaxType] on [Sales].[SalesTaxRate] ([TaxType]);
	    
		CREATE STATISTICS [stats_SalesTaxRate_TaxRate] on [Sales].[SalesTaxRate] ([TaxRate]);
	    
		CREATE STATISTICS [stats_SalesTaxRate_Name] on [Sales].[SalesTaxRate] ([Name]);
	    
		CREATE STATISTICS [stats_SalesTaxRate_rowguid] on [Sales].[SalesTaxRate] ([rowguid]);
	    
		CREATE STATISTICS [stats_SalesTaxRate_ModifiedDate] on [Sales].[SalesTaxRate] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Sales.SalesTerritory
-----------------------------------------------------------------------------------------------------
IF (object_id('[Sales].[SalesTerritory]') IS NOT NULL)
			DROP  TABLE [Sales].[SalesTerritory];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Sales].[SalesTerritory]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [TerritoryID] ,[Name] ,[CountryRegionCode] ,[Group] ,[SalesYTD] ,[SalesLastYear] ,[CostYTD] ,[CostLastYear] ,[rowguid] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Sales].[SalesTerritory_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_SalesTerritory_TerritoryID] on [Sales].[SalesTerritory] ([TerritoryID]);
	    
		CREATE STATISTICS [stats_SalesTerritory_Name] on [Sales].[SalesTerritory] ([Name]);
	    
		CREATE STATISTICS [stats_SalesTerritory_CountryRegionCode] on [Sales].[SalesTerritory] ([CountryRegionCode]);
	    
		CREATE STATISTICS [stats_SalesTerritory_Group] on [Sales].[SalesTerritory] ([Group]);
	    
		CREATE STATISTICS [stats_SalesTerritory_SalesYTD] on [Sales].[SalesTerritory] ([SalesYTD]);
	    
		CREATE STATISTICS [stats_SalesTerritory_SalesLastYear] on [Sales].[SalesTerritory] ([SalesLastYear]);
	    
		CREATE STATISTICS [stats_SalesTerritory_CostYTD] on [Sales].[SalesTerritory] ([CostYTD]);
	    
		CREATE STATISTICS [stats_SalesTerritory_CostLastYear] on [Sales].[SalesTerritory] ([CostLastYear]);
	    
		CREATE STATISTICS [stats_SalesTerritory_rowguid] on [Sales].[SalesTerritory] ([rowguid]);
	    
		CREATE STATISTICS [stats_SalesTerritory_ModifiedDate] on [Sales].[SalesTerritory] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Sales.SalesTerritoryHistory
-----------------------------------------------------------------------------------------------------
IF (object_id('[Sales].[SalesTerritoryHistory]') IS NOT NULL)
			DROP  TABLE [Sales].[SalesTerritoryHistory];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Sales].[SalesTerritoryHistory]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [BusinessEntityID] ,[TerritoryID] ,cast(convert(datetime2,[StartDate] ,121) as datetime) as [StartDate] ,cast(convert(datetime2,[EndDate] ,121) as datetime) as [EndDate] ,[rowguid] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Sales].[SalesTerritoryHistory_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_SalesTerritoryHistory_BusinessEntityID] on [Sales].[SalesTerritoryHistory] ([BusinessEntityID]);
	    
		CREATE STATISTICS [stats_SalesTerritoryHistory_TerritoryID] on [Sales].[SalesTerritoryHistory] ([TerritoryID]);
	    
		CREATE STATISTICS [stats_SalesTerritoryHistory_StartDate] on [Sales].[SalesTerritoryHistory] ([StartDate]);
	    
		CREATE STATISTICS [stats_SalesTerritoryHistory_EndDate] on [Sales].[SalesTerritoryHistory] ([EndDate]);
	    
		CREATE STATISTICS [stats_SalesTerritoryHistory_rowguid] on [Sales].[SalesTerritoryHistory] ([rowguid]);
	    
		CREATE STATISTICS [stats_SalesTerritoryHistory_ModifiedDate] on [Sales].[SalesTerritoryHistory] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Sales.ShoppingCartItem
-----------------------------------------------------------------------------------------------------
IF (object_id('[Sales].[ShoppingCartItem]') IS NOT NULL)
			DROP  TABLE [Sales].[ShoppingCartItem];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Sales].[ShoppingCartItem]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [ShoppingCartItemID] ,[ShoppingCartID] ,[Quantity] ,[ProductID] ,cast(convert(datetime2,[DateCreated] ,121) as datetime) as [DateCreated] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Sales].[ShoppingCartItem_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_ShoppingCartItem_ShoppingCartItemID] on [Sales].[ShoppingCartItem] ([ShoppingCartItemID]);
	    
		CREATE STATISTICS [stats_ShoppingCartItem_ShoppingCartID] on [Sales].[ShoppingCartItem] ([ShoppingCartID]);
	    
		CREATE STATISTICS [stats_ShoppingCartItem_Quantity] on [Sales].[ShoppingCartItem] ([Quantity]);
	    
		CREATE STATISTICS [stats_ShoppingCartItem_ProductID] on [Sales].[ShoppingCartItem] ([ProductID]);
	    
		CREATE STATISTICS [stats_ShoppingCartItem_DateCreated] on [Sales].[ShoppingCartItem] ([DateCreated]);
	    
		CREATE STATISTICS [stats_ShoppingCartItem_ModifiedDate] on [Sales].[ShoppingCartItem] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Sales.SpecialOffer
-----------------------------------------------------------------------------------------------------
IF (object_id('[Sales].[SpecialOffer]') IS NOT NULL)
			DROP  TABLE [Sales].[SpecialOffer];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Sales].[SpecialOffer]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [SpecialOfferID] ,[Description] ,[DiscountPct] ,[Type] ,[Category] ,cast(convert(datetime2,[StartDate] ,121) as datetime) as [StartDate] ,cast(convert(datetime2,[EndDate] ,121) as datetime) as [EndDate] ,[MinQty] ,[MaxQty] ,[rowguid] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Sales].[SpecialOffer_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_SpecialOffer_SpecialOfferID] on [Sales].[SpecialOffer] ([SpecialOfferID]);
	    
		CREATE STATISTICS [stats_SpecialOffer_Description] on [Sales].[SpecialOffer] ([Description]);
	    
		CREATE STATISTICS [stats_SpecialOffer_DiscountPct] on [Sales].[SpecialOffer] ([DiscountPct]);
	    
		CREATE STATISTICS [stats_SpecialOffer_Type] on [Sales].[SpecialOffer] ([Type]);
	    
		CREATE STATISTICS [stats_SpecialOffer_Category] on [Sales].[SpecialOffer] ([Category]);
	    
		CREATE STATISTICS [stats_SpecialOffer_StartDate] on [Sales].[SpecialOffer] ([StartDate]);
	    
		CREATE STATISTICS [stats_SpecialOffer_EndDate] on [Sales].[SpecialOffer] ([EndDate]);
	    
		CREATE STATISTICS [stats_SpecialOffer_MinQty] on [Sales].[SpecialOffer] ([MinQty]);
	    
		CREATE STATISTICS [stats_SpecialOffer_MaxQty] on [Sales].[SpecialOffer] ([MaxQty]);
	    
		CREATE STATISTICS [stats_SpecialOffer_rowguid] on [Sales].[SpecialOffer] ([rowguid]);
	    
		CREATE STATISTICS [stats_SpecialOffer_ModifiedDate] on [Sales].[SpecialOffer] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Sales.SpecialOfferProduct
-----------------------------------------------------------------------------------------------------
IF (object_id('[Sales].[SpecialOfferProduct]') IS NOT NULL)
			DROP  TABLE [Sales].[SpecialOfferProduct];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Sales].[SpecialOfferProduct]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [SpecialOfferID] ,[ProductID] ,[rowguid] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Sales].[SpecialOfferProduct_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_SpecialOfferProduct_SpecialOfferID] on [Sales].[SpecialOfferProduct] ([SpecialOfferID]);
	    
		CREATE STATISTICS [stats_SpecialOfferProduct_ProductID] on [Sales].[SpecialOfferProduct] ([ProductID]);
	    
		CREATE STATISTICS [stats_SpecialOfferProduct_rowguid] on [Sales].[SpecialOfferProduct] ([rowguid]);
	    
		CREATE STATISTICS [stats_SpecialOfferProduct_ModifiedDate] on [Sales].[SpecialOfferProduct] ([ModifiedDate]);
		GO
 

-----------------------------------------------------------------------------------------------------
--INICIO: Sales.Store
-----------------------------------------------------------------------------------------------------
IF (object_id('[Sales].[Store]') IS NOT NULL)
			DROP  TABLE [Sales].[Store];
		GO
		-- Carga de datos con polybase. Requiere que los external tables estén creados previamente
		--
        CREATE TABLE [Sales].[Store]
        WITH 
		( 
			CLUSTERED COLUMNSTORE INDEX,
			DISTRIBUTION = ROUND_ROBIN
		)
		AS
		SELECT [BusinessEntityID] ,[Name] ,[SalesPersonID] ,[Demographics] ,[rowguid] ,cast(convert(datetime2,[ModifiedDate] ,121) as datetime) as [ModifiedDate] 
		FROM [Sales].[Store_external]
		GO 		
		-- Creamos las estadísticas despues de la tabla (PDW no lo hace de momento automáticamente)
		-- 
			    
		CREATE STATISTICS [stats_Store_BusinessEntityID] on [Sales].[Store] ([BusinessEntityID]);
	    
		CREATE STATISTICS [stats_Store_Name] on [Sales].[Store] ([Name]);
	    
		CREATE STATISTICS [stats_Store_SalesPersonID] on [Sales].[Store] ([SalesPersonID]);
	    
		CREATE STATISTICS [stats_Store_Demographics] on [Sales].[Store] ([Demographics]);
	    
		CREATE STATISTICS [stats_Store_rowguid] on [Sales].[Store] ([rowguid]);
	    
		CREATE STATISTICS [stats_Store_ModifiedDate] on [Sales].[Store] ([ModifiedDate]);
		GO
-- End of auto generated code!